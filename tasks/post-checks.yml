---

- name: Check the state of the new Terraform package
  stat:
    path: "{{ terraform_install_dir }}/terraform"
  register: terraform_check_installed

- name: Fail play if terraform is not installed as expected
  assert:
    that:
      - terraform_check_installed.stat.exists
      - terraform_check_installed.stat.islnk
    fail_msg: Terraform was not installed as expected, it is likely something went wrong.
    success_msg: Terraform has been installed as expected.

- name: Check the Terraform binary version matches the expected version
  shell: |
    set -o pipefail
    {{ terraform_install_dir }}/terraform version | awk '{ print $NF }' | sed 's/^v//'
  args:
    executable: "{{ terraform_check_bash_path.stdout_lines[0] }}"
  changed_when: false
  failed_when: false
  register: terraform_check_installed_version

- name: Fail play if terraform is not the expected version
  assert:
    that:
      - terraform_check_installed_version.stdout_lines[0] == terraform_version
    fail_msg: Installed Terraform version is not as expected, it is likely something went wrong.
    success_msg: Installed Terraform version is as expected.
